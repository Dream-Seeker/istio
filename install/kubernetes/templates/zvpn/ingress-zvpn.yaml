# Custom envoy configuration for simple zvpn.
# Work in progress to automate it by having Pilot generate LDS v2 with SNI and capture the zvpn ports from
# annotations.
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config-zvpn
  namespace: istio-system
data:
  envoy.yaml: |
    stats_config:
      # Without this option it create a lot of regex, may run out of space.
      use_all_default_tags: false

    admin:
      access_log_path: /dev/stdout
      address:
        # Only allow debugging from localhost
        socket_address: { address: 127.0.0.1, port_value: 15000 }

    dynamic_resources:
      # LDS is not currently enabled, once SNI is enabled and LDSv2 ready, it will replace the manual config.
      lds_config:
        api_config_source:
          api_type: REST_LEGACY
          refresh_delay: 10s
          cluster_names: [rds]
      cds_config:
         api_config_source:
            api_type: REST_LEGACY
            refresh_delay: 10s
            cluster_names: [rds]
      deprecated_v1:
        sds_config:
          api_config_source:
                api_type: REST_LEGACY
                refresh_delay: 10s
                cluster_names: [rds]

    static_resources:
      listeners:

      - name: tcp-zvpn-pilot
        address:
          socket_address: { address: 0.0.0.0, port_value: 15003 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
              deprecated_v1: true
              value:
                stat_prefix: tcp_pilot
                route_config:
                    routes:
                    - cluster: zvpn.pilot

      - name: tcp-zvpn-mixer
        address:
          socket_address: { address: 0.0.0.0, port_value: 15006 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
              deprecated_v1: true
              value:
                stat_prefix: tcp-mixer
                route_config:
                    routes:
                    - cluster: zvpn.mixer

      - name: tcp-zvpn-ca
        address:
          socket_address: { address: 0.0.0.0, port_value: 8060 }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
              deprecated_v1: true
              value:
                stat_prefix: tcp_ca
                route_config:
                    routes:
                    - cluster: zvpn.ca

{{- range $app := .Values.zvpn.apps }}
      - name: tcp-zvpn-{{ $app.portName }}
        address:
          socket_address: { address: 0.0.0.0, port_value: {{ $app.externalPort }} }
        filter_chains:
        - filters:
          - name: envoy.tcp_proxy
            config:
              deprecated_v1: true
              value:
                stat_prefix: {{ $app.portName }}
                route_config:
                    routes:
                    - cluster: zvpn.{{ $app.portName }}
{{ end }}

      clusters:
      - name: rds
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        hosts:
          # TODO(costin): add TLS/15003
          - { socket_address: { address: "istio-pilot.istio-system", port_value: 8080 }}

      # Direct zvpn connection to pilot TLS port. This is used with a TCP proxy !
      - name: zvpn.pilot
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        hosts:
          - { socket_address: { address: "istio-pilot", port_value: 15003 }}

      - name: zvpn.ca
        connect_timeout: 0.25s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: istio-ca.istio-system.svc.cluster.local|grpc
          eds_config:
            api_config_source:
              api_type: REST_LEGACY
              cluster_names: [rds]
              refresh_delay: 10s

      # Connection to Mixer.
      - name: zvpn.mixer
        connect_timeout: 0.25s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: istio-mixer.istio-system.svc.cluster.local|grpc
          eds_config:
            api_config_source:
              api_type: REST_LEGACY
              cluster_names: [rds]
              refresh_delay: 10s

{{- range $app := .Values.zvpn.apps }}

      - name: zvpn.{{ $app.portName }}
        connect_timeout: 0.25s
        lb_policy: ROUND_ROBIN
        type: EDS
        eds_cluster_config:
          service_name: {{ $app.serviceKey }}
          eds_config:
            api_config_source:
              api_type: REST_LEGACY
              cluster_names: [rds]
              refresh_delay: 10s
{{ end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ingress-zvpn
  namespace: {{ .Values.istioNamespace }}
  annotations:
    sidecar.istio.io/inject: "false"

spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        keel.sh/pollSchedule: "@every 30m"
      labels:
        istio: ingress-zvpn
        keel.sh/policy: force
        keel.sh/trigger: poll
    spec:
      serviceAccountName: istio-ingress-service-account
      containers:
      - name: app
        # Manually start envoy, without using pilot-agent, so we can override the config.
        command: ["/usr/local/bin/envoy"]
        image: {{ .Values.istioHub }}/proxy_debug:{{ .Values.istioTag }}
        # Configuration matching pilot-agent.
        args: ["-c", "/etc/envoy/envoy.yaml", "-l", "debug", "--service-cluster", "istio-ingress", "--service-node" , "ingress~~istio-ingress.istio-system~istio-system.svc.cluster.local"]
        imagePullPolicy: Always
        ports:
        # Ports for control plane, zero vpn
        - containerPort: 15003
        - containerPort: 15006
        - containerPort: 8060
        - containerPort: 8080
{{- range $app := .Values.zvpn.apps }}
        - containerPort: {{ $app.externalPort }}
{{ end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: VER
          value: "1"
        - name: RELOAD
          value: "14"

        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        - name: envoyconfig
          mountPath: /etc/envoy
        resources:
          requests:
            cpu: 1500m
            memory: "1G"
          limits:
            cpu: 2000m
            memory: "2G"
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.default
          optional: true
      - name: envoyconfig
        configMap:
            name: envoy-config-zvpn
---
